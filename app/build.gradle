apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply from: 'google-play.gradle'

android {
    signingConfigs {
        release {
            storeFile rootProject.file(System.getenv('KEYSTORE') ?: KEYSTORE)
            storePassword System.getenv('KEYSTORE_PASSWORD') ?: KEYSTORE_PASSWORD
            keyAlias System.getenv('KEY_ALIAS') ?: KEY_ALIAS
            keyPassword System.getenv('KEY_PASSWORD') ?: KEY_PASSWORD
        }
    }
    compileSdkVersion 24
    buildToolsVersion '24.0.3'
    defaultConfig {
        applicationId 'io.oldering.tvfoot.red'
        minSdkVersion 21
        targetSdkVersion 24
        versionCode Integer.parseInt(System.getenv('CIRCLE_BUILD_NUM') ?: "69")
        versionName '1.0'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    sourceSets {
        main {
            res.srcDir 'src/main/res_broadcasters'
            res.srcDir 'src/main/res_teams'
        }
    }
    dexOptions {
        preDexLibraries = Boolean.valueOf(System.getProperty('pre-dex', 'true'))
    }
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    lintOptions {
        warning 'InvalidPackage' // prevent error from references of non-Android package
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'com.jakewharton.timber:timber:4.3.1'
    compile 'com.android.support:support-annotations:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:recyclerview-v7:24.2.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta3'
    compile 'com.genius:groupie:0.3.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.0'
    compile 'io.reactivex.rxjava2:rxjava:2.0.0'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.4.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.google.dagger:dagger:2.7'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.google.firebase:firebase-core:9.6.1'
    provided 'com.google.code.findbugs:jsr305:3.0.1'
    apt 'com.google.dagger:dagger-compiler:2.7'
    apt 'com.google.auto.value:auto-value:1.2'
    apt 'com.ryanharter.auto.value:auto-value-gson:0.4.2'
    apt 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
    provided 'com.google.auto.value:auto-value:1.2'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.2'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    // JVM Tests
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
//    testCompile 'org.powermock:powermock-api-easymock:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito-common:1.6.5'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.4.2'
    testCompile 'com.google.dagger:dagger:2.7'
    testApt 'com.google.dagger:dagger-compiler:2.7'

    // Android Tests
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // mockito 2 does not work with dexmaker ?
    // http://stackoverflow.com/a/32522862/1004274
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    // powermock and dexmaker are not good friends
    // http://stackoverflow.com/q/27953270/1004274
    // androidTestCompile 'org.powermock:powermock-module-junit4:1.6.5'
    // androidTestCompile 'org.powermock:powermock-api-mockito:1.6.5'
    // androidTestCompile 'org.powermock:powermock-api-mockito-common:1.6.5'

    // jmockit and dexmaker are not good friends
    // http://stackoverflow.com/a/36946031/1004274
    // androidTestCompile 'org.jmockit:jmockit:1.8'
}

apply plugin: 'com.google.gms.google-services'
